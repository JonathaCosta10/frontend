# OrganizeSee Environment Manager
# ==============================

param([string]$Environment)

function Show-Status {
    Write-Host "`nüåç Status dos Ambientes OrganizeSee" -ForegroundColor Blue
    Write-Host "=================================" -ForegroundColor Blue
    
    if (Test-Path ".env") {
        $CurrentEnv = Get-Content ".env" | Select-String "VITE_ENV=" | ForEach-Object { $_.ToString().Split('=')[1] }
        if ($CurrentEnv) {
            Write-Host "üìç Ambiente atual: $CurrentEnv" -ForegroundColor Cyan
        } else {
            Write-Host "üìç Arquivo .env existe mas VITE_ENV n√£o definido" -ForegroundColor Yellow
        }
    } else {
        Write-Host "üìç Nenhum ambiente configurado (.env n√£o encontrado)" -ForegroundColor Yellow
    }
    
    Write-Host "`nüìÇ Ambientes dispon√≠veis:" -ForegroundColor White
    
    if (Test-Path "environments\dev\.env.development") {
        Write-Host "  ‚úÖ Development (localhost)" -ForegroundColor Green
    } else {
        Write-Host "  ‚ùå Development (n√£o configurado)" -ForegroundColor Red
    }
    
    if (Test-Path "environments\prod\.env.production") {
        Write-Host "  ‚úÖ Production (organizesee.com.br)" -ForegroundColor Green
    } else {
        Write-Host "  ‚ùå Production (n√£o configurado)" -ForegroundColor Red
    }
    
    Write-Host "`nüí° Como usar:" -ForegroundColor White
    Write-Host "  npm run env:dev     # Para desenvolvimento local" -ForegroundColor Gray
    Write-Host "  npm run env:prod    # Para produ√ß√£o" -ForegroundColor Gray
    Write-Host "  npm run dev:local   # Configurar + executar desenvolvimento" -ForegroundColor Gray
    Write-Host "  npm run build:prod  # Configurar + build produ√ß√£o" -ForegroundColor Gray
    Write-Host ""
}

function Set-Environment {
    param([string]$Env)
    
    if ($Env -ne "development" -and $Env -ne "production") {
        Write-Host "‚ùå Ambiente inv√°lido: $Env" -ForegroundColor Red
        Write-Host "‚úÖ Ambientes v√°lidos: development, production" -ForegroundColor Yellow
        exit 1
    }
    
    $SourceFile = "environments\$Env\.env.$Env"
    
    if (-not (Test-Path $SourceFile)) {
        Write-Host "‚ùå Arquivo $SourceFile n√£o encontrado!" -ForegroundColor Red
        exit 1
    }
    
    Copy-Item $SourceFile ".env" -Force
    Write-Host "‚úÖ Ambiente $Env configurado!" -ForegroundColor Green
    Write-Host "üìÅ Arquivo copiado: $SourceFile ‚Üí .env" -ForegroundColor Cyan
    
    Write-Host "`nüöÄ Pr√≥ximos passos:" -ForegroundColor Yellow
    
    if ($Env -eq "development") {
        Write-Host "  1. npm run dev    # Iniciar servidor de desenvolvimento" -ForegroundColor White
        Write-Host "  2. Acessar: http://localhost:5173" -ForegroundColor White
    } else {
        Write-Host "  1. npm run build  # Gerar build de produ√ß√£o" -ForegroundColor White
        Write-Host "  2. npm run preview # Testar build localmente" -ForegroundColor White
    }
    
    Write-Host "`n‚ú® Ambiente $Env configurado com sucesso!" -ForegroundColor Green
}

# Executar
if (-not $Environment) {
    Show-Status
} else {
    Set-Environment -Env $Environment.ToLower()
}
